PK { }

DEFINITIONS EXPLICIT TAGS ::=

BEGIN

-- This file contains parts of PKCS-1 structures and some stuff
-- required for DSA keys.

RSAPublicKey ::= SEQUENCE {
        modulus                 INTEGER, -- n
        publicExponent          INTEGER  -- e
}

--
-- Representation of RSA private key with information for the
-- CRT algorithm.
--
RSAPrivateKey ::= SEQUENCE {
        version          	Version,
        modulus          	INTEGER, -- (Usually large) n
        publicExponent   	INTEGER, -- (Usually small) e
        privateExponent  	INTEGER, -- (Usually large) d
        prime1           	INTEGER, -- (Usually large) p
	prime2           	INTEGER, -- (Usually large) q
	exponent1        	INTEGER, -- (Usually large) d mod (p-1)
	exponent2        	INTEGER, -- (Usually large) d mod (q-1)
	coefficient      	INTEGER, -- (Usually large) (inverse of q) mod p
	otherPrimeInfos 	OtherPrimeInfos OPTIONAL
}

Version ::= INTEGER { two-prime(0), multi(1) }
-- version must be multi if otherPrimeInfos present --

RSAParameters ::= NULL

OtherPrimeInfos ::= SEQUENCE SIZE(1..MAX) OF OtherPrimeInfo

OtherPrimeInfo ::= SEQUENCE {
	prime INTEGER,  -- ri
	exponent INTEGER, -- di
	coefficient INTEGER -- ti
}

-- for signature calculation
-- added by nmav

AlgorithmIdentifier ::= SEQUENCE  {
     algorithm               OBJECT IDENTIFIER,
     parameters              ANY DEFINED BY algorithm OPTIONAL
}
                                -- contains a value of the type
                                -- registered for use with the
                                -- algorithm object identifier value

DigestInfo ::= SEQUENCE {
     digestAlgorithm DigestAlgorithmIdentifier,
     digest Digest
}

DigestAlgorithmIdentifier ::= AlgorithmIdentifier

Digest ::= OCTET STRING

DSAPublicPart ::= INTEGER

DSAPublicKey ::= SEQUENCE {
        version          	INTEGER, -- should be zero
        p          		INTEGER,
        q   			INTEGER,
        g  			INTEGER,
        Y	     	      	INTEGER  -- public
}

DSAParameters ::= SEQUENCE {
        p                   INTEGER,
        q                   INTEGER,
        g                   INTEGER
}

DSASignatureValue ::= SEQUENCE {
        r                   INTEGER,
        s                   INTEGER
}

DSAPrivatePart ::= INTEGER

DSAPrivateKey ::= SEQUENCE {
        version          	INTEGER, -- should be zero
        p          		INTEGER,
        q   			INTEGER,
        g  			INTEGER,
        Y	     	      	INTEGER, -- public
	priv           		INTEGER
}

-- from PKCS#3
DHParameter ::= SEQUENCE {
	prime INTEGER, -- p
	base INTEGER, -- g
	privateValueLength INTEGER OPTIONAL
}

ECDSASignature ::= SEQUENCE {
    r   INTEGER,
    s   INTEGER
}

ECParameters ::= CHOICE {
    namedCurve         OBJECT IDENTIFIER
    -- implicitCurve   NULL
    -- specifiedCurve  SpecifiedECDomain
}
-- implicitCurve and specifiedCurve MUST NOT be used in PKIX.
-- Details for SpecifiedECDomain can be found in [X9.62].
-- Any future additions to this CHOICE should be coordinated
-- with ANSI X9.

secp192r1 OBJECT IDENTIFIER ::= {
   iso(1) member-body(2) us(840) ansi-X9-62(10045) curves(3)
   prime(1) 1 }

sect163k1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 1 }

sect163r2 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 15 }

secp224r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 33 }

sect233k1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 26 }

sect233r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 27 }

secp256r1 OBJECT IDENTIFIER ::= {
   iso(1) member-body(2) us(840) ansi-X9-62(10045) curves(3)
   prime(1) 7 }

sect283k1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 16 }

sect283r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 17 }

secp384r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 34 }

sect409k1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 36 }

sect409r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 37 }

secp521r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 35 }

sect571k1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 38 }

sect571r1 OBJECT IDENTIFIER ::= {
   iso(1) identified-organization(3) certicom(132) curve(0) 39 }

ECPoint ::= OCTET STRING

ECPrivateKey ::= SEQUENCE {
    version        INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),
    privateKey     OCTET STRING,
    parameters [0] ECParameters {{ NamedCurve }} OPTIONAL,
    publicKey  [1] BIT STRING OPTIONAL
}

END
